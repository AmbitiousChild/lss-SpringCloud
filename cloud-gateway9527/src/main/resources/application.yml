server:
  port: 9527

spring:
  application:
    name: cloud-gateway #以微服务注册进consul或nacos服务列表内
  cloud:
    consul: #配置consul地址
      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
    gateway:
      routes:
        - id: pay_routh1 #pay_routh1                #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001                #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service          #匹配后提供服务的路由地址
          predicates:
            - Path=/pay/gateway/get/**              # 断言，路径相匹配的进行路由
#            - After=2024-06-13T14:51:33.635846900+08:00[Asia/Shanghai] #after
#            - Before=2023-12-29T17:58:13.586918800+08:00[Asia/Shanghai]
            #- Between=2023-11-21T17:38:13.586918800+08:00[Asia/Shanghai],2023-11-22T17:38:13.586918800+08:00[Asia/Shanghai]
#            - Cookie=username,zzyy
            #- Header=X-Request-Id, \d+  # 请求头要有X-Request-Id属性并且值为整数的正则表达式
            #- Host=**.lss.com  #Host断言
            #- Query=username, \d+  # 要有参数名username并且值还要是整数才能路由
            #- RemoteAddr=192.168.124.1/24 # 外部访问我的IP限制，最大跨度不超过32，目前是1~24它们是 CIDR 表示法。

              #Predicate就是为了实现一组匹配规则，让请求过来找对应的Route进行处理
            - My= glod #支持自定义断言短格式diamond
#            - name: My
#              args:
#                  userType: diamond


        - id: pay_routh2 #pay_routh2                #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001                #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service          #匹配后提供服务的路由地址
          predicates:
            - Path=/pay/gateway/info/**              # 断言，路径相匹配的进行路由


        - id: pay_routh3 #pay_routh3
          uri: lb://cloud-payment-service                #匹配后提供服务的路由地址
          predicates:
            - Path=/pay/gateway/filter/**              # 断言，路径相匹配的进行路由 # 被分拆为: PrefixPath + Path
            #- Path=/gateway/filter/**              # 断言，为配合PrefixPath测试过滤，暂时注释掉/pay
            #- Path=/XYZ/abc/{segment}
          filters:
#            - AddRequestHeader=X-Request-lss1,lssValue1  # 请求头kv，若一头含有多参则重写一行设置
#            - AddRequestHeader=X-Request-lss2,lssValue2
#            - RemoveRequestHeader=sec-fetch-site      # 删除请求头sec-fetch-site
#            - SetRequestHeader=sec-fetch-mode, Blue-updatebyzzyy # 将请求头sec-fetch-mode对应的值修改为Blue-updatebyzzyy

            #请求参数相关组
#            - AddRequestParameter=customerId,9527001 # 新增请求参数Parameter：k ，v
#            - RemoveRequestParameter=customerName   # 删除url请求参数customerName，你传递过来也是null

            #回应头相关组
#            - AddResponseHeader=X-Response-lss, BlueResponse # 新增请求参数X-Response-lss并设值为BlueResponse
#            - SetResponseHeader=Date,2099-11-11 # 设置回应头Date值为2099-11-11
#            - RemoveResponseHeader=Content-Type # 将默认自带Content-Type回应属性删除

            #前缀和路径相关组
            #- PrefixPath=/pay # http://localhost:9527/pay/gateway/filter
            #- SetPath=/pay/gateway/{segment} #{segment}表示占位符，你写abc=也行但要上下一致
            #- RedirectTo=302, https://www.baidu.com/ # 访问http://localhost:9527/pay/gateway/filter跳转到https://www.baidu.com/
            - My=lss